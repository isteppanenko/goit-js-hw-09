{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QACJC,EAAAH,EAAKI,SAA7BC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OACrBV,EAAKW,iBAAiB,SAAUC,GAChC,IAAIC,EAAW,EACXC,EAAY,EAEhB,SAASF,EAAcG,GACrBA,EAAMC,iBAENC,YAAW,WACTC,EAAWL,EAAUM,OAAOd,EAAMe,QAClCN,GAAaK,OAAOd,EAAMe,M,GACzBf,EAAMe,OAETH,YAAW,WACT,IAAK,IAAII,EAAQ,EAAGA,EAAQZ,EAAOW,MAAQ,EAAGC,GAAS,EACrDR,GAAY,EACZC,GAAaK,OAAOZ,EAAKa,OACzBF,EAAWL,EAAUC,E,GAEtBT,EAAMe,OAETH,YAAW,WACTJ,EAAW,EACXC,EAAY,C,GACX,E,CAGL,SAASI,EAAWI,EAAUC,GAC5BN,YAAW,YAab,SAAsBO,EAAGC,EAAUC,GACjCF,EAAEG,MAAK,WACL7B,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAgBK,OAAVJ,EAAU,M,IAChEK,OAAM,WACPjC,EAAA8B,OAAOI,QAAQ,sBAAuCF,OAAfL,EAAS,QAAgBK,OAAVJ,EAAU,M,IARhEO,CARQ,IAAIC,SAAQ,SAACC,EAASC,GACNC,KAAKC,SAAW,GAEpCH,IAEAC,G,IAGYd,EAAUC,E,GACzBA,EAAYJ,OAAOd,EAAMe,O,CAW9BtB,EAAA8B,OAAOW,KAAK,CACVC,cAAc,EACdC,SAAU,gBACVC,MAAO,QACPC,QAAS,QACTC,SAAU,SAGZ,IAAMC,EAAS5C,SAASC,cAAc,SACnBD,SAAS6C,iBAAiB,SAC1B7C,SAAS6C,iBAAiB,SAC1B7C,SAAS6C,iBAAiB,UAE7CD,EAAOlC,iBAAiB,UAExB,SAAoBoC,GAClBA,EAAI/B,iBACYG,OAAO4B,EAAIC,OAAO5C,SAASE,MAAMc,OAGjD,IAHA,IACM6B,EAAW9B,OAAO4B,EAAIC,OAAO5C,SAASI,KAAKY,OAC3C8B,EAAa/B,OAAO4B,EAAIC,OAAO5C,SAASM,OAAOU,OAC5C+B,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EACpCvC,EAAcuC,GACXxB,MAAK,SAAAyB,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAAL9C,MACjBR,EAAA8B,OAAOC,QAAQ,kBAA+CC,OAAfuB,EAAS,QAAcvB,OAANwB,EAAM,O,IAEvEvB,OAAM,SAAAqB,G,IAAGG,EAAQH,EAARX,SAAUe,EAAKJ,EAAL9C,MAClBR,EAAA8B,OAAOI,QAAQ,oBAAkDF,OAAfyB,EAAS,QAAczB,OAAN0B,EAAM,O,IAE/CP,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst { delay, step, amount } = form.elements;\nform.addEventListener('submit', createPromise);\nlet position = 0;\nlet stepValue = 0;\n\nfunction createPromise(event) {\n  event.preventDefault();\n\n  setTimeout(() => {\n    newPromise(position, Number(delay.value));\n    stepValue += Number(delay.value);\n  }, delay.value);\n\n  setTimeout(() => {\n    for (let index = 0; index < amount.value - 1; index += 1) {\n      position += 1;\n      stepValue += Number(step.value);\n      newPromise(position, stepValue);\n    }\n  }, delay.value);\n\n  setTimeout(() => {\n    position = 1;\n    stepValue = 0;\n  }, 0);\n}\n\nfunction newPromise(position, stepValue) {\n  setTimeout(() => {\n    let a = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    });\n    returnResult(a, position, stepValue);\n  }, stepValue - Number(delay.value));\n}\n\nfunction returnResult(a, position, stepValue) {\n  a.then(() => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${stepValue}ms`);\n  }).catch(() => {\n    Notify.failure(`❌ Rejected promise ${position} in ${stepValue}ms`);\n  });\n}\n\nNotify.init({\n  clickToClose: true,\n  position: 'center-center',\n  width: '600px',\n  timeout: '10000',\n  fontSize: '17px',\n});\n\nconst formEl = document.querySelector('.form');\nconst formInputs = document.querySelectorAll('input');\nconst formLabels = document.querySelectorAll('label');\nconst formButton = document.querySelectorAll('button');\n\nformEl.addEventListener('submit', handleForm);\n\nfunction handleForm(evt) {\n  evt.preventDefault();\n  let promDelay = Number(evt.target.elements.delay.value);\n  const promStep = Number(evt.target.elements.step.value);\n  const promAmount = Number(evt.target.elements.amount.value);\n  for (let i = 1; i <= promAmount; i += 1) {\n    createPromise(i, promDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Успішний тест №${position} на ${delay} мс`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Помилка у тесті №${position} на ${delay} мс`);\n      });\n    promDelay += promStep;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","addEventListener","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$stepValue","event","preventDefault","setTimeout","$ce04d3a99e08e73b$var$newPromise","Number","value","index","position1","stepValue1","a","position2","stepValue2","then","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$returnResult","Promise","resolve","reject","Math","random","init","clickToClose","position","width","timeout","fontSize","$ce04d3a99e08e73b$var$formEl","querySelectorAll","evt","target","promStep","promAmount","i","param","position3","delay1","position4","delay2"],"version":3,"file":"03-promises.b6b60504.js.map"}